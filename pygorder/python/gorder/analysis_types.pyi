# This file is automatically generated by pyo3_stub_gen
# ruff: noqa: E501, F401

import builtins
import typing

class AAOrder:
    r"""
    Request the calculation of atomistic order parameters.
    
    Parameters
    ----------
    heavy_atoms : str
        Selection query specifying the heavy atoms to be used in the analysis (typically carbon atoms in lipid tails).
    hydrogens : str
        Selection query specifiying the hydrogen atoms to be used in the analysis (only those bonded to heavy atoms will be considered).
    
    Notes
    ------
    - Atoms should be specified using the `groan selection language <https://ladme.github.io/gsl-guide>`_.
    - Order parameters are calculated for bonds between `heavy_atoms` and `hydrogens`. These bonds are detected automatically.
    - The order parameters for heavy atoms are determined by averaging the order parameters of the corresponding bonds.
    """
    def __new__(cls, heavy_atoms:builtins.str, hydrogens:builtins.str) -> AAOrder: ...

class CGOrder:
    r"""
    Request the calculation of coarse-grained order parameters.
    
    Parameters
    ----------
    beads : str
        Selection query specifying the coarse-grained beads to be used in the analysis.
    
    Notes
    -----
    - Beads should be specified using the `groan selection language <https://ladme.github.io/gsl-guide>`_.
    - Order parameters are calculated for bonds between individual `beads`. These bonds are detected automatically.
    """
    def __new__(cls, beads:builtins.str) -> CGOrder: ...

class UAOrder:
    r"""
    Request the calculation of united-atom order parameters.
    
    Parameters
    ----------
    saturated : Optional[str], default=None
        Selection query specifying saturated carbons which order parameters should be calculated.
    unsaturated : Optional[str], default=None
        Selection query specifying unsaturated carbons which order parameters should be calculated.
    ignore : Optional[str], default=None
        Selection query specifying atoms to be completely ignored when performing the analysis.
    
    Notes
    -----
    - To specify atoms, use the `groan selection language <https://ladme.github.io/gsl-guide>`_.
    - The positions of hydrogens will be predicted for the respective carbons and order parameters will be calculated
      for the individual carbon-hydrogen bonds.
    - Only carbons are supported. If you need to predict hydrogens for other elements, look elsewhere!
    - When calculating the number of bonds, `gorder` does not distinguish between single and double bonds.
      This means it will attempt to add one hydrogen to a carboxyl atom if specified.
      A simple solution to this issue is to exclude such atoms from the analysis.
    """
    def __new__(cls, saturated:typing.Optional[builtins.str]=None, unsaturated:typing.Optional[builtins.str]=None, ignore:typing.Optional[builtins.str]=None) -> UAOrder: ...

